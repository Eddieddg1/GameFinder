name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Get version from input
      id: tag_name
      shell: bash
      env:
        INPUT_VERSION: ${{ github.event.inputs.version }}
      run: |
        echo ::set-output name=current_version::${INPUT_VERSION}
    
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Setup .NET 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Verify .NET Core
      run: dotnet --info

    - name: Clear local NuGet cache (workaround for failed restores on windows-latest)
      run: dotnet clean && dotnet nuget locals all --clear

    - name: Restore dependencies
      run: dotnet restore
  
    - name: Build
      run: dotnet build --no-restore -p:Version="${{ steps.tag_name.outputs.current_version }}"
    
    - name: Test
      run: dotnet test --no-build --no-restore --verbosity normal
    
    - name: Publish Example Project
      run: dotnet publish GameFinder.Example/GameFinder.Example.csproj --no-restore -o "out" -p:PublishSingleFile=true -p:PublishTrimmed=true -c Release
    
    - name: Zip Example Project
      run: |
        cd out/
        7z a -tzip GameFinder.Example.zip *.exe *.dll
    
    - name: Get Changelog Entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.tag_name.outputs.current_version }}
        path: ./CHANGELOG.md
    
    #- name: Pack
    #  run: dotnet pack ${{ env.PROJECT_FILE }} --no-build --no-restore -p:Version="${{ steps.tag_name.outputs.current_version }}"
    
    #- name: Upload Artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: artifact
    #    path: '**/*.nupkg'
    #    if-no-files-found: error

    - name: Push
      run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ steps.changelog_reader.outputs.version }}
        name: Release ${{ steps.changelog_reader.outputs.version }}
        body: ${{ steps.changelog_reader.outputs.changes }}
        draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
        prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
        files: |
          **/*.nupkg
          **/*.snupkg
          out/GameFinder.Example.zip
